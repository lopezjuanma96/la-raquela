/*CSS es una hoja de cascada de estilos, si defino dos clases con el mismo nombre va a tomar la de más abajo porque lee de arriba para abajo y va reemplazando*/
/*si a un objeto llegan propiedades de distintas fuentes: si son propiedades distintas y compatibles, se suman. si son la misma propiedad repetida, segun la prioridad de especificidad: ID>Class>Etiqueta, ej: si un objeto tiene propiedad de clase color rojo y propiedad de id color verde, va a ser verde.*/
/*La especificidad Máxima en realidad lo tienen los estilos INLINE, pero no es de buenas practicas usar estilos inline, solo se usa en un caso MUY NECESARIO.*/
/*Se puede quebrar la prioridad en cascada dando el atributo !important en una definicion de CSS, esa definición sobreescribe a todas, tampoco es de buenas practicas*/
/*Tanto el INLINE como !important se podrían aplicar en casos de mucha urgencia de realizar un cambio del cual no encuentro la clase, o si estoy probando estilos en una parte y los uso solo de prueba pero cuando voy a aplicar el real lo cambio*/
/*Estilos por tags: Especificidad baja, depende de cuantas tag de profundidad vaya*/
* { /*CSS Reset:  el horizontal esta bueno que sea auto porque sino hace todo el margen a cero y por ejemplo se pierden los tabs de lsitas*/
    margin: 0 auto;
    padding: 0 auto;
}


form fieldset legend {
    background-color: black;
    color: blanchedalmond;
}

/*Estilos por class: Especificidad media: todos los que tengan este nombre en el atributo class heredan este estilo*/
/*Si un elemento padre recibe atributos de una clase, sus hijos lo hacen también, a menos que se les designe otra clase*/
.cool{
    background-color: darkgreen;
    border: darkgrey 4px solid;
}

/*Estilos por IDs: Especificidad alta: funciona similar a especificidad por class pero el ID es unico por elemento*/
#preguntaVolverSi{
    color:green;
}

#preguntaVolverNo{
    color:red;
}